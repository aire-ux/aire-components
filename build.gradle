plugins {
    id 'pmd'
    id 'groovy'
    id 'java-library'
    id 'java-test-fixtures'
    id "com.github.spotbugs" version "4.7.0" apply false
    id "io.freefair.lombok" version "5.3.0" apply false
    id "com.diffplug.spotless" version "5.12.5" apply false
    id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
}

apply from: "$rootDir/tasks/revisions.gradle"




allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'


    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url uri("https://maven.pkg.github.com/sunshower-io/sunshower-arcus")
            credentials {
                username "$mavenRepositoryUsername"
                password "$mavenRepositoryPassword"
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom "com.aire-ux.components:bom-imported:$version"
        }
    }

    configurations {

        [
                "com.vaadin.webjar",
                "org.webjars.bowergithub.insites",
                "org.webjars.bowergithub.polymer",
                "org.webjars.bowergithub.polymerelements",
                "org.webjars.bowergithub.vaadin",
                "org.webjars.bowergithub.webcomponents"
        ].each { dep ->
            all*.exclude(group: dep)
        }

    }

}

subprojects {
    apply plugin: 'pmd'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'java-library'
    apply plugin: 'java-test-fixtures'
    apply plugin: 'io.freefair.lombok'
    apply plugin: "com.github.spotbugs"
    apply plugin: "com.diffplug.spotless"
    extensions.add('component', new AireComponent(project))
    spotbugsMain {
        reports {
            html {
                enabled = true
            }
        }
    }

    java {
        modularity.inferModulePath = true
    }

    spotbugsTest {
        enabled = false
    }

    configurations {
        aire {
            transitive false
        }
    }

    pmd {
        toolVersion = '6.34.0'
        sourceSets = [sourceSets.main]
        ruleSets = [
                "${project.rootDir}/check/pmd/rules/errorprone.xml"
        ]
    }

    test {
        useJUnitPlatform()
    }

    spotless {
        java {
            googleJavaFormat('1.9')
        }
    }


    publishing {

        repositories {
            mavenLocal()

            maven {
                credentials {
                    username "$mavenRepositoryUsername"
                    password "$mavenRepositoryPassword"
                }
                url "$mavenRepositoryUrl"
            }
        }


        task testJar(type: Jar) {
            archiveClassifier = 'tests'
            from sourceSets.test.output
        }

        task javadocJar(type: Jar) {
            from javadoc
            archiveClassifier = 'javadoc'
        }

        afterEvaluate { Project project -> {
                if (project.component) {

                }
            }
        }


        publications {
            pluginMaven(MavenPublication) {
                /**
                 * components source
                 */
                from components.java

                /**
                 * maven coordinates
                 */
                groupId = project.group
                artifactId = project.name
                version = project.version

                /**
                 * included artifacts
                 */

                artifact testJar
                artifact javadocJar

                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }


    dependencies {


        testImplementation 'org.mockito:mockito-inline'
        testImplementation 'org.mockito:mockito-junit-jupiter'
        testImplementation 'org.junit-pioneer:junit-pioneer'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'

        [
                'api',
                'engine'

        ].each { dep ->
            testImplementation "org.junit.jupiter:junit-jupiter-$dep"
            testImplementation "org.junit.platform:junit-platform-suite-$dep"
        }
    }


}